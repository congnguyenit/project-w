FORMAT: 1A
HOST: http://api.congnguyen.xyz/vk5v35/

# VisiKard

## get Credit Card List [/kashkard/wallet/user/getbalance]

### get list credit card [POST]

+ Request (application/x-www-form-urlencoded)

        fkUser=33287&deviceID=

+ Response 200 (application/json)

    + Headers 
    
            Location: /kashkard/wallet/user/getbalance
            
    + Body
    
            {
              "extend": null,
              "clientMessage": "",
              "status": "OK",
              "statusCode": 200,
              "result": []
            }

## get point [/point/get/point/level/{fkUser}]

+ Parameters
    + fkUser - A path variable that is required for a valid URL

### get point [GET]
+ Response 200 (application/json)

    + Headers 
    
            Location: /kashkard/wallet/user/getbalance
            
    + Body
    
            {
              "extend": null,
              "clientMessage": "",
              "status": "OK",
              "statusCode": 200,
              "result": []
            }

## get Gift Kards By konnect zone [/deal/get/giftKardsByUserAndKonnectzone/{userId}/{konnectZoneId}]

+ Parameters
    + userId - A path variable that is required for a valid URL
    + konnectZoneId - 
    
### get point [GET]
+ Response 200 (application/json)

    + Headers 
    
            Location: /kashkard/wallet/user/getbalance
            
    + Body
    
            {
                "clientMessage": "",
                "extend": null,
                "statusCode": 200,
                "status": "OK",
                "result": [
                    {
                        "cert_value": 95,
                        "purchase_value": 100,
                        "thumb": "http://stg.visikard.com/cache/new/users/34666/gk_image_code_qr_20179171443.png",
                        "img": "http://stg.visikard.com/cache/new/users/34666/gk_image_code_qr_20179171443.png",
                        "currency": "",
                        "name": "KaKaKa",
                        "id": 2284,
                        "type": 1
                    },
                    {
                        "cert_value": 55,
                        "purchase_value": 100,
                        "thumb": "http://stg.visikard.com/cache/new/users/34666/gk_image_code_qr_20179171443.png",
                        "img": "http://stg.visikard.com/cache/new/users/34666/gk_image_code_qr_20179171443.png",
                        "currency": "",
                        "name": "KaKaKa",
                        "id": 2285,
                        "type": 1
                    }
                ]
            }

## Payment [/api/payment/execute]

### Pay Without Product List [POST]

+ Request (application/json)

        {
            "amount" : 2,
            "sessionId":"WK2WGOYDT3D8AHXBDDXC3XM16LJ5VIRU37KONQVT",
            "deviceId" : "D034F820-DCBB-4799-A9CD-B44CBF6901DC",
            "fkUser" : 34665,
            "cvv":"900",
            "groupId" : 538,
            "kashKardToken" : "62843835bca94755ac92851e8d762741",
            "orgAmount" : 12,
            "point" : 0,
            "giftKards": [{
                    "giftKardAmount" : 100,
                    "giftKardId" : 2285,
                    "redeemAmount" : 10,
                    "type":1
                }],//nullable
            "coupon":{}//nullable
        }

+ Response 200 (application/json)

    + Headers 
    
            Location: /api/payment/execute
            
    + Body
    
            {
                "clientMessage": "SUCCESS",
                "extend": null,
                "statusCode": 0,
                "status": "OK",
                "result": {
                    "status": 0,
                    "message": "SUCCESS",
                    "exception": null,
                    "result": {
                        "paymentStatus": null,
                        "transactionId": "e78d1805da1c4f71bc9c0c5b70a0d866",
                        "statusCode": "",
                        "invoiceBalance": "2.0",
                        "status": "0"
                    }
            }

## get minimum amount [/utils/getminamount]
    
### get minimum amount [GET]
+ Response 200 (application/json)

    + Headers 
    
            Location: /utils/getminamount
            
    + Body
    
            {
              "extend": null,
              "clientMessage": "",
              "status": "OK",
              "statusCode": 200,
              "result": [5.0]
            }

## get maximum percent of point, which user can use [/utils/getmaxpoint]
    
### get maximum percent of point [GET]
+ Response 200 (application/json)

    + Headers 
    
            Location: /utils/getmaxpoint
            
    + Body
    
            {
              "extend": null,
              "clientMessage": "",
              "status": "OK",
              "statusCode": 200,
              "result": 10.0
            }

## get list of option point user can choose [/utils/getpointcfg]
    
### get list of option point choice [GET]
+ Response 200 (application/json)

    + Headers 
    
            Location: /utils/getpointcfg
            
    + Body
    
            {
              "extend": null,
              "clientMessage": "",
              "status": "OK",
              "statusCode": 200,
              "result": [3,5,10]
            }

## get payment setting [/utils/paymentsetting]
    
### get payment setting [GET]
+ Response 200 (application/json)

    + Headers 
    
            Location: /utils/paymentsetting
            
    + Body
    
            {
                "clientMessage": "",
                "extend": null,
                "statusCode": 200,
                "status": "OK",
                "result": {
                    "minAmount": 5,
                    "maxPoint": 10,
                    "listChoice": [
                        3,
                        5,
                        10
                    ],
                    "pointRatio": 1000
                }
            }


































## EXAMPLE [/questions]
Example to base of API
### List All Questions [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }